let xmlJSON = {"introduction":"<root>\r\n  <h1>Wstęp</h1>\r\n  <p>JavaScript<br/> <br/> JavaScript to język programowania z ograniczonym dostępem do komputera stosowany najczęściej na stronach intenetowych do tworzenia efektów, walidacji, skryptów, lub nawet prostych aplikacji. <br/> Kod JavaScript może być osadzony w kodzie strony lub jako osobny plik.</p>\r\n\r\n</root>","ipsum":"<root>\r\n  <h1>Trulys something</h1>\r\n\r\n  <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Phasellus non ornare sapien. Maecenas ultrices purus ac bibendum rhoncus. Nam facilisis eleifend diam non auctor. Quisque pretium nisi leo, a mollis nisi pretium nec. Duis tempor magna ut tortor interdum <b>venenatis</b>. Vestibulum cursus fringilla velit, non tempus ex feugiat a. In accumsan erat sed lorem lacinia, sed accumsan elit fringilla. Vestibulum sagittis risus diam, ut lacinia felis suscipit in. Sed ut orci felis. Praesent vitae congue est, et ultricies justo. Cras et tempus ipsum. Duis libero justo, convallis sed mauris et, pharetra imperdiet risus. Vestibulum vitae auctor mi. Nam vitae metus et diam blandit sodales. In hac habitasse platea dictumst. Curabitur sit amet odio vestibulum, lacinia arcu ut, ornare <i>est</i>.</p>\r\n\r\n  <p><b>BOLD LOREM IPSUM</b></p>\r\n  <p><i>italic LOREM IPSUM</i></p>\r\n  <p><b><i>BOLD AND ITALIC LOREM IPSUM</i></b></p>\r\n\r\n  <code><c-V>console</c-V>.<c-F>log</c-F>(<c-K>\"Lorem ipsum dolor sit amet.\"</c-K>)</code>\r\n\r\n  <codeblock>\r\n    console.log(\"Lorem ipsum dolor sit amet\")\r\n    console.warn(\"Lorem ipsum dolor sit amet\")\r\n    console.error(\"Lorem ipsum dolor sit amet\")\r\n  </codeblock>\r\n\r\n  <table>\r\n    <tr>\r\n      <th>Lorem</th>\r\n      <th>ipsum</th>\r\n      <th>dolor</th>\r\n    </tr>\r\n    <tr>\r\n      <td>sit</td>\r\n      <td>amet,</td>\r\n      <td>consectetur</td>\r\n    </tr>\r\n    <tr>\r\n      <td>adipiscing</td>\r\n      <td>elit,</td>\r\n      <td>ASDFGHJKL</td>\r\n    </tr>\r\n  </table>\r\n\r\n  <table>\r\n    <tr>\r\n      <td>log</td>\r\n      <td><code><c-V>console</c-V>.<c-F>log</c-F>(<c-K>\"Lorem ipsum dolor sit amet.\"</c-K>)</code></td>\r\n    </tr>\r\n    <tr>\r\n      <td>warn</td>\r\n      <td><code><c-V>console</c-V>.<c-F>warn</c-F>(<c-K>\"Lorem ipsum dolor sit amet.\"</c-K>)</code></td>\r\n    </tr>\r\n    <tr>\r\n      <td>error</td>\r\n      <td><code><c-V>console</c-V>.<c-F>error</c-F>(<c-K>\"Lorem ipsum dolor sit amet.\"</c-K>)</code></td>\r\n    </tr>\r\n  </table>\r\n</root>","jscomments":"<root>\r\n  <h1>Komentarze</h1>\r\n  <p>Komentarze to tekst napisany w kodzie który jest ignorowany przez kompilator, co oznacza że nie wyświetli się na stronie, i nie spełni na niej żadnej funkcji. <br/> <br/> \r\n  Komentarze używane są poprostu jako informacja dla siebie lub innych która ma wyjaśnić funkcję kodu. <br/> <br/> \r\n  W JavaScript występują 2 rodzaje komentarzy: liniowy i blokowy. liniowy jak mówi sama nazwa zajmuje tylko jedną linijkę kodu, a blokowy zajmuje kilka.</p>\r\n\r\n  <codeblock>\r\n    \r\n    //komentarz liniowy\r\n\r\n    /* Komentarz blokowy\r\n    Zajmuje wiele lini */\r\n\r\n    /*alert(\"Uwaga\")\r\n    pomimo że jest tu przywołana funkcja, \r\n    nie zostanie ona wykonana \r\n    gdyż jest to komentarz. */\r\n\r\n  </codeblock>\r\n\r\n</root>","jsdebug":"<root>\r\n  <h1>Hello everyone!</h1>\r\n  <p>Test<br/>aaaa</p>\r\n\r\n  <code><c-V>console</c-V>.<c-F>log</c-F>(<c-L>\"hi\"</c-L>)</code>\r\n\r\n  <codeblock>\r\n    console.log(1)\r\n    console.log(2)\r\n  </codeblock>\r\n</root>","jsdom":"<root>\r\n  <h1>Hello everyone!</h1>\r\n  <p>Test<br/>aaaa</p>\r\n\r\n  <code><c-V>console</c-V>.<c-F>log</c-F>(<c-L>\"hi\"</c-L>)</code>\r\n\r\n  <codeblock>\r\n    console.log(1)\r\n    console.log(2)\r\n  </codeblock>\r\n</root>","jsfunctions":"<root>\r\n  <h1>Hello everyone!</h1>\r\n  <p>Test<br/>aaaa</p>\r\n\r\n  <code><c-V>console</c-V>.<c-F>log</c-F>(<c-L>\"hi\"</c-L>)</code>\r\n\r\n  <codeblock>\r\n    console.log(1)\r\n    console.log(2)\r\n  </codeblock>\r\n</root>","jsloops":"<root>\r\n  <h1>Pętle</h1>\r\n  <p>Pętle to funkcje w JavaScript które umożliwiają wielokrotną akytwacje tego samego kodu aż do czasu spełnienia danego warunku. <br/> <br/> \r\n  Dwie podstawowe pętle w JavaScript to pętla \"for\" i pętla \"while\", pętla for jest używana by wykonać kod określoną ilość razy, lub do przejścia przez każdy element danego obiektu. <br/> <br/> \r\n  Pętla while jest używana aby powtarzać dany kod aż do czasu spełnienia danego warunku.\r\n  \r\n  </p>\r\n\r\n  <codeblock>\r\n\r\n    // ta pętla wykona kod zawarty w {} 3 razy.\r\n\r\n    // struktura pętli for: for(*zmienna*;*warunek*;*inkrementacja lub dekrementacja*)\r\n    \r\n    for (let i = 0; i  &lt;= 3; i++) \r\n    {\r\n      console.log(i)\r\n    }\r\n\r\n    // to same ale wykonane przy użyciu pętli while\r\n\r\n    // struktura pętli while: while (*warunke*)\r\n\r\n    var x = 0;\r\n\r\n    while (x &lt;= 3)\r\n    {\r\n\r\n      console.log(x)\r\n      x = x+1;\r\n\r\n    }\r\n\r\n  </codeblock>\r\n\r\n</root>","jsobjects":"<root>\r\n  <h1>Hello everyone!</h1>\r\n  <p>Test<br/>aaaa</p>\r\n\r\n  <code><c-V>console</c-V>.<c-F>log</c-F>(<c-L>\"hi\"</c-L>)</code>\r\n\r\n  <codeblock>\r\n    console.log(1)\r\n    console.log(2)\r\n  </codeblock>\r\n</root>","jsoperators":"<root>\r\n  <h1>Operatory</h1>\r\n  <p> Operatory w JavaScript to znaki pełniące pewną funkcję w kodzie. </p> \r\n\r\n  <table>\r\n    <tr>\r\n      <th>Znak</th>\r\n      <th>Funkcja</th>\r\n    </tr>\r\n    <tr>\r\n      <td>=</td>\r\n      <td>Przypisanie</td>\r\n    </tr>\r\n    <tr>\r\n      <td>+</td>\r\n      <td>Dodawnie</td>\r\n    </tr>\r\n    <tr>\r\n      <td>-</td>\r\n      <td>Odejmowanie</td>\r\n    </tr>\r\n    <tr>\r\n      <td>*</td>\r\n      <td>Mnożenie</td>\r\n    </tr>\r\n    <tr>\r\n      <td>/</td>\r\n      <td>Dzielenie</td>\r\n    </tr>\r\n    <tr>\r\n      <td>%</td>\r\n      <td>Modulo</td>\r\n    </tr>\r\n    <tr>\r\n      <td>++</td>\r\n      <td>Inkrementcja</td>\r\n    </tr>\r\n    <tr>\r\n      <td>--</td>\r\n      <td>Dekrementacja</td>\r\n    </tr>\r\n    <tr>\r\n      <td> &gt; </td>\r\n      <td>większe</td>\r\n    </tr>\r\n    <tr>\r\n      <td>  &lt; </td>\r\n      <td>mniejsze</td>\r\n    </tr>\r\n    <tr>\r\n      <td>&gt;=</td>\r\n      <td>większe bądź równe</td>\r\n    </tr>\r\n    <tr>\r\n      <td>&lt;=</td>\r\n      <td>mniejsze bądź równe</td>\r\n    </tr>\r\n    <tr>\r\n      <td>==</td>\r\n      <td>Równe</td>\r\n    </tr>\r\n    <tr>\r\n      <td>!=</td>\r\n      <td>Nierówne</td>\r\n    </tr>\r\n    <tr>\r\n      <td>&amp;&amp;</td>\r\n      <td>i</td>\r\n    </tr>\r\n    <tr>\r\n      <td>||</td>\r\n      <td>lub</td>\r\n    </tr>\r\n    <tr>\r\n      <td>!</td>\r\n      <td>nie</td>\r\n    </tr>\r\n  </table>\r\n\r\n  <codeblock>\r\n\r\n    var x = 5; //przypisanie\r\n\r\n    var y = 5;\r\n\r\n    console.log(\"dodawanie: \" + (x + y))\r\n\r\n    console.log(\"odejmowanie: \" + (x - y))\r\n\r\n    console.log(\"mnożenie: \" + (x * y))\r\n\r\n    console.log(\"dzielenie: \" + (x / y))\r\n\r\n  </codeblock>\r\n\r\n</root>","jstypes":"<root>\r\n  <h1>Hello everyone!</h1>\r\n  <p>Test<br/>aaaa</p>\r\n\r\n  <code><c-V>console</c-V>.<c-F>log</c-F>(<c-L>\"hi\"</c-L>)</code>\r\n\r\n  <codeblock>\r\n    console.log(1)\r\n    console.log(2)\r\n  </codeblock>\r\n</root>","jsvariables":"<root>\r\n  <h1>Zmienne</h1>\r\n  <p> Zmienna to sposób na przechowywanie wartości w języku JavaScript i wielu innych. <br/> <br/> \r\n  Dwa główne sposoby na zdeklarowanie Zmiennej w JavaScript to przy użyciu znaczników \"var\" i \"let\" <br/> <br/> \r\n  Zmienne \"var\" to zmienne globalne, czyli takie które mogą być użyte w całym kodzie, a \"let\" to zmienne prywatne, czyli takie które zadziałają tylko w funkcji w której zostały zdeklarowane.</p>\r\n\r\n  <codeblock>\r\n\r\n    var x = 5;\r\n\r\n    console.log(\"x: \" + x);\r\n\r\n\r\n    let y = 2;\r\n\r\n    console.log(\"y: \" + y);\r\n\r\n  </codeblock>\r\n\r\n</root>","jswindows":"<root>\r\n  <h1>Okna dialogowe</h1>\r\n  <p>Okna dialogowe to najprostszy sposób na przekazywanie informacji użytkownikowi w języku JavaScript.<br/> <br/>\r\n  Okna Występują w 3 rodzajach: \"alert\", \"prompt\" i \"confirm\". <br/> <br/> <br/>\r\n  Okno alert jest najbardziej podstawowe i służy jedynie do przekazywania informacji użytkownikowi. <br/> <br/>\r\n  Okno prompt pozwala użytkownikowi wprowadzić dane z klawiatury. <br/> <br/>\r\n  Okno confirm zawiera 2 podstawowe opcje: \"ok\" i \"anuluj\" można go użyć aby umożliwić użytkownikowi podjęcie decyzji.</p>\r\n\r\n  <codeblock>\r\n\r\n    alert(\"Uwaga!\");\r\n\r\n    var dane = prompt(\"wpisz dane\");\r\n\r\n    if (confirm(\"Wyświetlić dane?\")) \r\n    {\r\n      alert(\"Dane: \" + dane);\r\n    } \r\n      else \r\n    {\r\n      alert(\"Anulowano\");\r\n    } \r\n\r\n  </codeblock>\r\n\r\n  <p> Powyższy kod najpierw wyświetli powiadomienie \"Uwaga!\", potem poprosi o podanie danych, a na końcu zapyta się czy wyświetlić wpisane dane. </p>\r\n\r\n</root>"}